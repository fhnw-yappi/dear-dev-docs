@incollection{sadowski_happiness_2019,
	location = {Berkeley, {CA}},
	title = {Happiness and the Productivity of Software Engineers},
	isbn = {9781484242209 9781484242216},
	url = {https://link.springer.com/10.1007/978-1-4842-4221-6_10},
	pages = {109--124},
	booktitle = {Rethinking Productivity in Software Engineering},
	publisher = {Apress},
	author = {Graziotin, Daniel and Fagerholm, Fabian},
	editor = {Sadowski, Caitlin and Zimmermann, Thomas},
	urldate = {2025-08-08},
	date = {2019},
	langid = {english},
	doi = {10.1007/978-1-4842-4221-6_10},
}

@online{zenhub_2022_nodate,
	title = {2022 Software Developer Happiness Report - Developer Productivity Data},
	url = {https://www.zenhub.com/reports/software-developer-happiness},
	abstract = {Software developer productivity data that will help you foster a positive developer culture and retain talent. Learn more!},
	titleaddon = {Zenhub},
	urldate = {2025-08-08},
	langid = {english},
}

@article{franca_motivation_2020,
	title = {Motivation and Satisfaction of Software Engineers},
	volume = {46},
	issn = {1939-3520},
	url = {https://ieeexplore.ieee.org/document/8370133},
	doi = {10.1109/TSE.2018.2842201},
	abstract = {Context: The proper management of people can help software organisations to achieve higher levels of success. However, the limited attention paid to the appropriate use of theories to underpin the research in this area leaves it unclear how to deal with human aspects of software engineers, such as motivation and satisfaction. Objectives: This article aims to expose what drives the motivation and satisfaction of software engineers at work. Methods: A multiple case study was conducted at four software organisations in Brazil. For 11 months, data was collected using semi-structured interviews, diary studies, and document analyses. Results: The Theory of Motivation and Satisfaction of Software Engineers ({TMS}-{SE}), presented in this article, combines elements from well established theories with new findings, and translates them into the software engineering context. Conclusion: The {TMS}-{SE} advances the understanding of people management in the software engineering field and presents a strong conceptual framework for future investigations in this area.},
	pages = {118--140},
	number = {2},
	journaltitle = {{IEEE} Transactions on Software Engineering},
	author = {França, César and da Silva, Fabio Q. B. and Sharp, Helen},
	urldate = {2025-08-08},
	date = {2020-02},
	keywords = {Human factors, Human resource management, Organizational aspects, Productivity, Software development management, Software engineering, Work motivation, human resource management, job satisfaction, software engineering},
}

@online{google_dora_2024,
	title = {Announcing the 2024 {DORA} report},
	url = {https://cloud.google.com/blog/products/devops-sre/announcing-the-2024-dora-report},
	abstract = {Key takeaways from the 2024 Google Cloud {DORA} report that focused on the last decade of {DORA}, {AI}, platform engineering and developer experience.},
	titleaddon = {Google Cloud Blog},
	urldate = {2025-08-08},
	langid = {english},
}

@article{stray_understanding_2020,
	title = {Understanding coordination in global software engineering: {A} mixed-methods study on the use of meetings and {Slack}},
	volume = {170},
	issn = {0164-1212},
	shorttitle = {Understanding coordination in global software engineering},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121220301564},
	doi = {10.1016/j.jss.2020.110717},
	abstract = {Given the relevance of coordination in the field of global software engineering, this work was carried out to further understand coordination mechanisms. Specifically, we investigated meetings and the collaboration tool Slack. We conducted a longitudinal case study using a mixed-methods approach with surveys, observations, interviews, and chat logs. Our quantitative results show that employees in global projects spend 7 h 45 min per week on average in scheduled meetings and 8 h 54 min in unscheduled meetings. Furthermore, distributed teams were significantly larger than co-located teams, and people working in distributed teams spent somewhat more time in meetings per day. We found that low availability of key people, absence of organizational support for unscheduled meetings and unbalanced activity from team members in meetings and on Slack were barriers for effective coordination across sites. The positive aspects of using collaboration tools in distributed teams were increased team awareness and informal communication and reduced the need for e-mail. Our study emphasizes the importance of reflecting on how global software engineering teams use meetings and collaboration tools to coordinate. We provide practical advice for conducting better meetings and give suggestions for more efficient use of collaboration tools in global projects.},
	urldate = {2025-08-08},
	journal = {Journal of Systems and Software},
	author = {Stray, Viktoria and Moe, Nils Brede},
	month = dec,
	year = {2020},
	keywords = {Agile software development, Collaboration tools, Computer-mediated communication, Distributed teams, Global teamwork, Team communication platforms},
	pages = {110717},
}

@article{meyer_today_2021,
	title = {Today was a {Good} {Day}: {The} {Daily} {Life} of {Software} {Developers}},
	volume = {47},
	copyright = {info:eu-repo/semantics/openAccess},
	issn = {0098-5589},
	shorttitle = {Today was a {Good} {Day}},
	url = {https://www.zora.uzh.ch/id/eprint/170375/},
	doi = {10.1109/TSE.2019.2904957},
	abstract = {What is a good workday for a software developer? What is a typical workday? We seek to answer these two questions to learn how to make good days typical. Concretely, answering these questions will help to optimize development processes and select tools that increase job satisfaction and productivity. Our work adds to a large body of research on how software developers spend their time. We report the results from 5971 responses of professional developers at Microsoft, who reflected about what made their workdays good and typical, and self-reported about how they spent their time on various activities at work. We developed conceptual frameworks to help define and characterize developer workdays from two new perspectives: good and typical. Our analysis confirms some findings in previous work, including the fact that developers actually spend little time on development and developers' aversion for meetings and interruptions. It also discovered new findings, such as that only 1.7\% of survey responses mentioned emails as a reason for a bad workday, and that meetings and interruptions are only unproductive during development phases; during phases of planning, specification and release, they are common and constructive. One key finding is the importance of agency, developers' control over their workday and whether it goes as planned or is disrupted by external factors. We present actionable recommendations for researchers and managers to prioritize process and tool improvements that make good workdays typical. For instance, in light of our finding on the importance of agency, we recommend that, where possible, managers empower developers to choose their tools and tasks.},
	language = {eng},
	number = {5},
	urldate = {2025-08-08},
	journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
	author = {Meyer, André and Barr, Earl T. and Bird, Christian and Zimmermann, Thomas},
	month = may,
	year = {2021},
	pages = {863--880},
}
